# Generated by Django 5.2.3 on 2025-07-09 18:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='RaspberryPi',
            fields=[
                ('pi_id', models.CharField(max_length=100, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='Tên thân thiện của Raspberry Pi (ví dụ: Pi Khu Vực A)', max_length=100)),
                ('location', models.CharField(blank=True, help_text='Vị trí vật lý của Pi', max_length=200, null=True)),
                ('last_seen', models.DateTimeField(auto_now=True, help_text='Thời gian cuối cùng server nhận dữ liệu từ Pi này')),
                ('status', models.CharField(default='offline', max_length=20)),
                ('local_ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'Raspberry Pis',
            },
        ),
        migrations.CreateModel(
            name='EspDevice',
            fields=[
                ('esp_id', models.CharField(help_text='ID duy nhất của ESP32 (ví dụ: MAC address, hoặc ID do bạn gán)', max_length=100, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(help_text='Tên thân thiện của ESP32 (ví dụ: ESP32 Phòng Khách)', max_length=100)),
                ('location', models.CharField(blank=True, help_text='Vị trí vật lý của ESP32 (nếu khác với Pi)', max_length=200, null=True)),
                ('communication_protocol_with_pi', models.CharField(choices=[('RS485', 'RS485 (Modbus/Custom)'), ('RS232', 'RS232 (Custom)'), ('WIFI', 'Wi-Fi (MQTT/ESP-NOW/HTTP)')], help_text='Giao thức Pi sử dụng để giao tiếp với ESP32 này', max_length=20)),
                ('last_seen', models.DateTimeField(auto_now=True, help_text='Thời gian cuối cùng Pi nhận dữ liệu/heartbeat từ ESP32 này')),
                ('status', models.CharField(default='offline', max_length=20)),
                ('raspberry_pi', models.ForeignKey(help_text='Raspberry Pi mà ESP32 này kết nối tới', on_delete=django.db.models.deletion.CASCADE, related_name='esp_devices', to='iot_app.raspberrypi')),
            ],
            options={
                'verbose_name_plural': 'ESP Devices',
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sensor_id', models.CharField(help_text='ID duy nhất của cảm biến (ví dụ: địa chỉ I2C, số chân GPIO trên ESP32)', max_length=100)),
                ('name', models.CharField(help_text='Tên thân thiện của cảm biến (ví dụ: Cảm biến Nhiệt độ Phòng A)', max_length=100)),
                ('sensor_type', models.CharField(help_text="Loại cảm biến (ví dụ: 'temperature', 'humidity', 'light')", max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Cảm biến này có đang hoạt động không')),
                ('esp_device', models.ForeignKey(help_text='ESP32 mà cảm biến này kết nối tới', on_delete=django.db.models.deletion.CASCADE, related_name='sensors', to='iot_app.espdevice')),
            ],
            options={
                'unique_together': {('esp_device', 'sensor_id')},
            },
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(help_text='Giá trị đọc được từ cảm biến')),
                ('timestamp_device', models.DateTimeField(help_text='Thời gian đọc được ghi nhận tại thiết bị cảm biến/ESP32')),
                ('timestamp_server', models.DateTimeField(auto_now_add=True, help_text='Thời gian dữ liệu được nhận tại Django Server')),
                ('esp_device', models.ForeignKey(help_text='ESP32 mà cảm biến này gắn vào', on_delete=django.db.models.deletion.CASCADE, related_name='all_sensor_readings', to='iot_app.espdevice')),
                ('raspberry_pi', models.ForeignKey(help_text='Raspberry Pi mà ESP32 này kết nối tới', on_delete=django.db.models.deletion.CASCADE, related_name='all_esp_sensor_readings', to='iot_app.raspberrypi')),
                ('sensor', models.ForeignKey(help_text='Cảm biến tạo ra bản đọc này', on_delete=django.db.models.deletion.CASCADE, related_name='readings', to='iot_app.sensor')),
            ],
            options={
                'verbose_name_plural': 'Sensor Readings',
                'ordering': ['-timestamp_device'],
                'unique_together': {('sensor', 'timestamp_device')},
            },
        ),
    ]
