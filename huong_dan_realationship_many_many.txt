python manage.py shell

>>> from book_outlet.models import Country,Book
>>> Book.objects.all()
<QuerySet [<Book: 1|Harry Potter 1|5|J.K Rowling|True)|harry-potter-1>, <Book: 2|Doremon|5|Fujio Fujiko|True)|doremon>]>
>>> hp1=Book.objects.all()[0]
>>> hp1.published_countries
<django.db.models.fields.related_descriptors.create_forward_many_to_many_manager.<locals>.ManyRelatedManager object at 0x0000019F0D59A7E0>
>>> hp1.published_countries.all()
<QuerySet []>
>>> germany=Country(name='Germany',code='DE')
>>> mys=Book.objects.all()[1]
>>> mys.published_countries=germany
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\datbm\AppData\Local\Programs\Python\Python312\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 668, in __set__
    raise TypeError(
TypeError: Direct assignment to the forward side of a many-to-many set is prohibited. Use published_countries.set() instead.
>>> mys.published_countries.add(germany)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "C:\Users\datbm\AppData\Local\Programs\Python\Python312\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 1256, in add  
    self._add_items(
  File "C:\Users\datbm\AppData\Local\Programs\Python\Python312\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 1516, in _add_items
    target_ids = self._get_target_ids(target_field_name, objs)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\datbm\AppData\Local\Programs\Python\Python312\Lib\site-packages\django\db\models\fields\related_descriptors.py", line 1432, in _get_target_ids
    raise ValueError(
ValueError: Cannot add "<Country: Country object (None)>": instance is on database "default", value is on database "None"
>>> germany.save()
>>> mys.published_countries.add(germany)
>>> mys.publish_countries.all()
Traceback (most recent call last):
  File "<console>", line 1, in <module>
AttributeError: 'Book' object has no attribute 'publish_countries'. Did you mean: 'published_countries'?
>>> mys.published_countries.all()
<QuerySet [<Country: Country object (1)>]>
>>> mys.published_countries.filter(code='DE')
<QuerySet [<Country: Country object (1)>]>
>>> mys.published_countries.filter(code='UK') 
<QuerySet []>

>>> ger=Country.objects.all()
>>> ger=Country.objects.all()[0]
>>> ger.book_set.all()
<QuerySet [<Book: 2|Doremon|5|Fujio Fujiko|True)|doremon>]>

--related_name=books to instead book_set

>>> ger=Country.objects.all()
>>> ger=Country.objects.all()[0]
>>> ger.books.all()    
<QuerySet [<Book: 2|Doremon|5|Fujio Fujiko|True)|doremon>]>